/**
 * Database seed script
 * Populates database with demo data
 */

const bcrypt = require('bcrypt');
const { pool } = require('./src/config/database');

async function seedDatabase() {
  console.log('üå± Starting database seed...');

  try {
    // Clear existing data
    console.log('üì¶ Clearing existing data...');
    await pool.query('DELETE FROM tasks');
    await pool.query('DELETE FROM projects');
    await pool.query("DELETE FROM users WHERE email IN ('admin@example.com', 'janos@example.com', 'anna@example.com')");

    // Reset auto increment
    await pool.query('ALTER TABLE tasks AUTO_INCREMENT = 1');
    await pool.query('ALTER TABLE projects AUTO_INCREMENT = 1');
    await pool.query('ALTER TABLE users AUTO_INCREMENT = 1');

    // Hash password
    const passwordHash = await bcrypt.hash('password123', 10);
    console.log('üîê Password hashed:', passwordHash);

    // Insert demo users
    console.log('üë• Inserting demo users...');
    await pool.query(`
      INSERT INTO users (name, email, password_hash, role) VALUES
        ('Admin User', 'admin@example.com', ?, 'admin'),
        ('Kov√°cs J√°nos', 'janos@example.com', ?, 'user'),
        ('Nagy Anna', 'anna@example.com', ?, 'user')
    `, [passwordHash, passwordHash, passwordHash]);

    // Insert demo projects
    console.log('üìÅ Inserting demo projects...');
    await pool.query(`
      INSERT INTO projects (name, description, start_date, end_date, owner_id, status, color) VALUES
        ('E-commerce platform fejleszt√©s', 'Online webshop rendszer React + Node.js-sel', '2025-01-15', '2025-04-30', 2, 'in_progress', '#667eea'),
        ('Mobilalkalmaz√°s UI design', 'iOS √©s Android app design Figma-ban', '2025-02-01', '2025-03-15', 3, 'in_progress', '#764ba2'),
        ('CRM rendszer migr√°ci√≥', 'Legacy rendszer √°t√°ll√≠t√°sa √∫j platformra', '2024-11-01', '2025-12-31', 2, 'in_progress', '#f093fb')
    `);

    // Insert demo tasks
    console.log('‚úÖ Inserting demo tasks...');
    await pool.query(`
      INSERT INTO tasks (project_id, name, description, start_date, deadline, owner_id, status, priority) VALUES
        -- Project 1: E-commerce platform
        (1, 'Backend API elk√©sz√≠t√©se', 'REST API v√©gpontok Node.js + Express-szel', '2025-01-15', '2025-02-15', 2, 'completed', 'high'),
        (1, 'Frontend komponensek', 'React komponensek fejleszt√©se', '2025-02-16', '2025-03-30', 2, 'in_progress', 'high'),
        (1, 'Payment integr√°ci√≥', 'Stripe fizet√©si integr√°ci√≥', '2025-03-01', '2025-04-15', 2, 'open', 'medium'),
        (1, 'Term√©k katal√≥gus', 'Term√©k list√°z√°s √©s keres√©s', '2025-10-05', '2025-10-20', 2, 'open', 'high'),
        (1, 'Shopping cart', 'Kos√°r funkci√≥ implement√°l√°sa', '2025-10-08', '2025-10-25', 2, 'open', 'medium'),

        -- Project 2: Mobile UI design
        (2, 'Wireframe k√©sz√≠t√©s', 'Alapvet≈ë UI strukt√∫ra tervez√©se', '2025-02-01', '2025-02-10', 3, 'completed', 'medium'),
        (2, 'UI mockup-ok', 'R√©szletes vizu√°lis tervek Figma-ban', '2025-02-11', '2025-03-05', 3, 'in_progress', 'high'),
        (2, 'Design system', 'Komponens k√∂nyvt√°r kialak√≠t√°sa', '2025-03-06', '2025-03-15', 3, 'open', 'low'),
        (2, 'Icon k√©szlet', 'Egyedi ikonok tervez√©se', '2025-10-10', '2025-10-18', 3, 'open', 'low'),

        -- Project 3: CRM migration
        (3, 'Adatmigr√°ci√≥', 'R√©gi rendszer adatainak √°tmigr√°l√°sa', '2024-11-01', '2025-01-31', 2, 'completed', 'high'),
        (3, 'Felhaszn√°l√≥i tesztel√©s', 'Beta tesztel√©s bels≈ë csapattal', '2025-02-01', '2025-10-20', 2, 'in_progress', 'medium'),
        (3, 'Dokument√°ci√≥', 'Felhaszn√°l√≥i k√©zik√∂nyv k√©sz√≠t√©se', '2025-10-06', '2025-10-22', 2, 'open', 'low'),
        (3, 'Training anyagok', 'Oktat√≥vide√≥k k√©sz√≠t√©se', '2025-10-12', '2025-11-10', 3, 'open', 'medium')
    `);

    // Verify data
    console.log('\nüìä Verification:');
    const [users] = await pool.query('SELECT COUNT(*) as count FROM users');
    console.log(`   Users: ${users[0].count}`);

    const [projects] = await pool.query('SELECT COUNT(*) as count FROM projects');
    console.log(`   Projects: ${projects[0].count}`);

    const [tasks] = await pool.query('SELECT COUNT(*) as count FROM tasks');
    console.log(`   Tasks: ${tasks[0].count}`);

    console.log('\n‚úÖ Database seeded successfully!');
    console.log('\nüìù Demo credentials:');
    console.log('   Email: admin@example.com / janos@example.com / anna@example.com');
    console.log('   Password: password123');

    process.exit(0);

  } catch (error) {
    console.error('‚ùå Seed error:', error);
    process.exit(1);
  }
}

// Run seed
seedDatabase();
